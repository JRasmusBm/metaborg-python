module Test

imports
  
  Common
  ID
  Expression
  Parameters

context-free start-symbols
  Test

context-free syntax

  TestList.TestList = {Test ","}+ Comma?

  Test.Test = OrTest OrTestExtension? 
  Test.LambdaDef = LambdaDef

  TestNocond.OrTest = OrTest
  TestNocond.LambDefNoCond = LambDefNocond
  
  LambDefNocond.LambDefNocond = "lambda" VarArgsList? ":" TestNocond

  LambdaDef.LambdaDef = "lambda" VarArgsList? ":" Test
    
  OrTestExtension.OrTest = "if" OrTest "else" Test

  OrTest.OrTest = {AndTest "or"}+
  AndTest.AndTest = {NotTest "and"}+
  
  NotTest.NotTest = "not" NotTest
  
  NotTest.Comparison = Exp ComparisonExtension*

  ComparisonExtension.Comparison = ComparisonOperator Exp

  ComparisonOperator.Lt = "<"
  ComparisonOperator.Gt = ">"
  ComparisonOperator.Eq = "=="
  ComparisonOperator.Geq = ">="
  ComparisonOperator.Leq = "<="
  ComparisonOperator.Neq = "!="
  ComparisonOperator.Neq2 = "<>"
  ComparisonOperator.In = "in"
  ComparisonOperator.NotIn = "not" "in"
  ComparisonOperator.Is = "is"
  ComparisonOperator.IsNot = "is" "not"